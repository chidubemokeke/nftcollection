// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Pregnant extends ethereum.Event {
  get params(): Pregnant__Params {
    return new Pregnant__Params(this);
  }
}

export class Pregnant__Params {
  _event: Pregnant;

  constructor(event: Pregnant) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get matronId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sireId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Birth extends ethereum.Event {
  get params(): Birth__Params {
    return new Birth__Params(this);
  }
}

export class Birth__Params {
  _event: Birth;

  constructor(event: Birth) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get dragonId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get matronId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sireId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get dna(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get generation(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get runeLevel(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class DragonAssetsUpdated extends ethereum.Event {
  get params(): DragonAssetsUpdated__Params {
    return new DragonAssetsUpdated__Params(this);
  }
}

export class DragonAssetsUpdated__Params {
  _event: DragonAssetsUpdated;

  constructor(event: DragonAssetsUpdated) {
    this._event = event;
  }

  get _dragonId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _rune(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _agility(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _strength(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _intelligence(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class DragonAssetRequest extends ethereum.Event {
  get params(): DragonAssetRequest__Params {
    return new DragonAssetRequest__Params(this);
  }
}

export class DragonAssetRequest__Params {
  _event: DragonAssetRequest;

  constructor(event: DragonAssetRequest) {
    this._event = event;
  }

  get _dragonId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ContractUpgrade extends ethereum.Event {
  get params(): ContractUpgrade__Params {
    return new ContractUpgrade__Params(this);
  }
}

export class ContractUpgrade__Params {
  _event: ContractUpgrade;

  constructor(event: ContractUpgrade) {
    this._event = event;
  }

  get newContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class dragoncore__dragonAssetsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class dragoncore__getDragonResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    return map;
  }
}

export class dragoncore__getAuctionBalancesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class dragoncore extends ethereum.SmartContract {
  static bind(address: Address): dragoncore {
    return new dragoncore("dragoncore", address);
  }

  supportsInterface(interfaceID: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceID)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceID: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  cfoAddress(): Address {
    let result = super.call("cfoAddress", "cfoAddress():(address)", []);

    return result[0].toAddress();
  }

  try_cfoAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("cfoAddress", "cfoAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pregnantDragons(): BigInt {
    let result = super.call(
      "pregnantDragons",
      "pregnantDragons():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_pregnantDragons(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pregnantDragons",
      "pregnantDragons():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getApproved(_tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ceoAddress(): Address {
    let result = super.call("ceoAddress", "ceoAddress():(address)", []);

    return result[0].toAddress();
  }

  try_ceoAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("ceoAddress", "ceoAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  dragonAssets(param0: BigInt): dragoncore__dragonAssetsResult {
    let result = super.call(
      "dragonAssets",
      "dragonAssets(uint256):(uint64,uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new dragoncore__dragonAssetsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_dragonAssets(
    param0: BigInt
  ): ethereum.CallResult<dragoncore__dragonAssetsResult> {
    let result = super.tryCall(
      "dragonAssets",
      "dragonAssets(uint256):(uint64,uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new dragoncore__dragonAssetsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getBalance(): BigInt {
    let result = super.call("getBalance", "getBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getBalance", "getBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onERC721Received(
    _operator: Address,
    _from: Address,
    _tokenId: BigInt,
    _data: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromBytes(_data)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    _operator: Address,
    _from: Address,
    _tokenId: BigInt,
    _data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(_operator),
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isPregnant(_dragonId: BigInt): boolean {
    let result = super.call("isPregnant", "isPregnant(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_dragonId)
    ]);

    return result[0].toBoolean();
  }

  try_isPregnant(_dragonId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPregnant", "isPregnant(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_dragonId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  siringAuction(): Address {
    let result = super.call("siringAuction", "siringAuction():(address)", []);

    return result[0].toAddress();
  }

  try_siringAuction(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "siringAuction",
      "siringAuction():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPregnantDragons(): Array<BigInt> {
    let result = super.call(
      "getPregnantDragons",
      "getPregnantDragons():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getPregnantDragons(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getPregnantDragons",
      "getPregnantDragons():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  tokenOfOwnerByIndex(_owner: Address, _index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    _owner: Address,
    _index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sireAllowedToAddress(param0: BigInt): Address {
    let result = super.call(
      "sireAllowedToAddress",
      "sireAllowedToAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_sireAllowedToAddress(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "sireAllowedToAddress",
      "sireAllowedToAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  canBreedWith(_matronId: BigInt, _sireId: BigInt): boolean {
    let result = super.call(
      "canBreedWith",
      "canBreedWith(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_matronId),
        ethereum.Value.fromUnsignedBigInt(_sireId)
      ]
    );

    return result[0].toBoolean();
  }

  try_canBreedWith(
    _matronId: BigInt,
    _sireId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canBreedWith",
      "canBreedWith(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_matronId),
        ethereum.Value.fromUnsignedBigInt(_sireId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenByIndex(_index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(_index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  dragonIndexToOwner(param0: BigInt): Address {
    let result = super.call(
      "dragonIndexToOwner",
      "dragonIndexToOwner(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_dragonIndexToOwner(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "dragonIndexToOwner",
      "dragonIndexToOwner(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  cioAddress(): Address {
    let result = super.call("cioAddress", "cioAddress():(address)", []);

    return result[0].toAddress();
  }

  try_cioAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("cioAddress", "cioAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  newContractAddress(): Address {
    let result = super.call(
      "newContractAddress",
      "newContractAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_newContractAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newContractAddress",
      "newContractAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dragonIndexToApproved(param0: BigInt): Address {
    let result = super.call(
      "dragonIndexToApproved",
      "dragonIndexToApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_dragonIndexToApproved(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "dragonIndexToApproved",
      "dragonIndexToApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  BREEDING_LIMIT(): BigInt {
    let result = super.call("BREEDING_LIMIT", "BREEDING_LIMIT():(uint32)", []);

    return result[0].toBigInt();
  }

  try_BREEDING_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "BREEDING_LIMIT",
      "BREEDING_LIMIT():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokensOfOwner(_owner: Address): Array<BigInt> {
    let result = super.call(
      "tokensOfOwner",
      "tokensOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(_owner)]
    );

    return result[0].toBigIntArray();
  }

  try_tokensOfOwner(_owner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "tokensOfOwner",
      "tokensOfOwner(address):(uint256[])",
      [ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  cmoAddress(): Address {
    let result = super.call("cmoAddress", "cmoAddress():(address)", []);

    return result[0].toAddress();
  }

  try_cmoAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("cmoAddress", "cmoAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  cooAddress(): Address {
    let result = super.call("cooAddress", "cooAddress():(address)", []);

    return result[0].toAddress();
  }

  try_cooAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("cooAddress", "cooAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  autoBirthFee(): BigInt {
    let result = super.call("autoBirthFee", "autoBirthFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_autoBirthFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("autoBirthFee", "autoBirthFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURIPrefix(): string {
    let result = super.call("tokenURIPrefix", "tokenURIPrefix():(string)", []);

    return result[0].toString();
  }

  try_tokenURIPrefix(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "tokenURIPrefix",
      "tokenURIPrefix():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  giveBirth(
    _matronId: BigInt,
    _dna: BigInt,
    _agility: BigInt,
    _strength: BigInt,
    _intelligence: BigInt,
    _runelevel: BigInt
  ): BigInt {
    let result = super.call(
      "giveBirth",
      "giveBirth(uint256,uint256,uint64,uint64,uint64,uint64):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_matronId),
        ethereum.Value.fromUnsignedBigInt(_dna),
        ethereum.Value.fromUnsignedBigInt(_agility),
        ethereum.Value.fromUnsignedBigInt(_strength),
        ethereum.Value.fromUnsignedBigInt(_intelligence),
        ethereum.Value.fromUnsignedBigInt(_runelevel)
      ]
    );

    return result[0].toBigInt();
  }

  try_giveBirth(
    _matronId: BigInt,
    _dna: BigInt,
    _agility: BigInt,
    _strength: BigInt,
    _intelligence: BigInt,
    _runelevel: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "giveBirth",
      "giveBirth(uint256,uint256,uint64,uint64,uint64,uint64):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_matronId),
        ethereum.Value.fromUnsignedBigInt(_dna),
        ethereum.Value.fromUnsignedBigInt(_agility),
        ethereum.Value.fromUnsignedBigInt(_strength),
        ethereum.Value.fromUnsignedBigInt(_intelligence),
        ethereum.Value.fromUnsignedBigInt(_runelevel)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isReadyToBreed(_dragonId: BigInt): boolean {
    let result = super.call(
      "isReadyToBreed",
      "isReadyToBreed(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_dragonId)]
    );

    return result[0].toBoolean();
  }

  try_isReadyToBreed(_dragonId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isReadyToBreed",
      "isReadyToBreed(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_dragonId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenURISuffix(): string {
    let result = super.call("tokenURISuffix", "tokenURISuffix():(string)", []);

    return result[0].toString();
  }

  try_tokenURISuffix(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "tokenURISuffix",
      "tokenURISuffix():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getDragon(_id: BigInt): dragoncore__getDragonResult {
    let result = super.call(
      "getDragon",
      "getDragon(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );

    return new dragoncore__getDragonResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt()
    );
  }

  try_getDragon(_id: BigInt): ethereum.CallResult<dragoncore__getDragonResult> {
    let result = super.tryCall(
      "getDragon",
      "getDragon(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new dragoncore__getDragonResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt()
      )
    );
  }

  getAuctionBalances(): dragoncore__getAuctionBalancesResult {
    let result = super.call(
      "getAuctionBalances",
      "getAuctionBalances():(uint256,uint256)",
      []
    );

    return new dragoncore__getAuctionBalancesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getAuctionBalances(): ethereum.CallResult<
    dragoncore__getAuctionBalancesResult
  > {
    let result = super.tryCall(
      "getAuctionBalances",
      "getAuctionBalances():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new dragoncore__getAuctionBalancesResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  saleAuction(): Address {
    let result = super.call("saleAuction", "saleAuction():(address)", []);

    return result[0].toAddress();
  }

  try_saleAuction(): ethereum.CallResult<Address> {
    let result = super.tryCall("saleAuction", "saleAuction():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  updateAssetFee(): BigInt {
    let result = super.call("updateAssetFee", "updateAssetFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_updateAssetFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "updateAssetFee",
      "updateAssetFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class SetUpdateAssetFeeCall extends ethereum.Call {
  get inputs(): SetUpdateAssetFeeCall__Inputs {
    return new SetUpdateAssetFeeCall__Inputs(this);
  }

  get outputs(): SetUpdateAssetFeeCall__Outputs {
    return new SetUpdateAssetFeeCall__Outputs(this);
  }
}

export class SetUpdateAssetFeeCall__Inputs {
  _call: SetUpdateAssetFeeCall;

  constructor(call: SetUpdateAssetFeeCall) {
    this._call = call;
  }

  get newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetUpdateAssetFeeCall__Outputs {
  _call: SetUpdateAssetFeeCall;

  constructor(call: SetUpdateAssetFeeCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _approved(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class SetSiringAuctionAddressCall extends ethereum.Call {
  get inputs(): SetSiringAuctionAddressCall__Inputs {
    return new SetSiringAuctionAddressCall__Inputs(this);
  }

  get outputs(): SetSiringAuctionAddressCall__Outputs {
    return new SetSiringAuctionAddressCall__Outputs(this);
  }
}

export class SetSiringAuctionAddressCall__Inputs {
  _call: SetSiringAuctionAddressCall;

  constructor(call: SetSiringAuctionAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSiringAuctionAddressCall__Outputs {
  _call: SetSiringAuctionAddressCall;

  constructor(call: SetSiringAuctionAddressCall) {
    this._call = call;
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class UpdateDragonAssetCall extends ethereum.Call {
  get inputs(): UpdateDragonAssetCall__Inputs {
    return new UpdateDragonAssetCall__Inputs(this);
  }

  get outputs(): UpdateDragonAssetCall__Outputs {
    return new UpdateDragonAssetCall__Outputs(this);
  }
}

export class UpdateDragonAssetCall__Inputs {
  _call: UpdateDragonAssetCall;

  constructor(call: UpdateDragonAssetCall) {
    this._call = call;
  }

  get _dragonId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _rune(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _agility(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _strength(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _intelligence(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class UpdateDragonAssetCall__Outputs {
  _call: UpdateDragonAssetCall;

  constructor(call: UpdateDragonAssetCall) {
    this._call = call;
  }
}

export class SetCMOCall extends ethereum.Call {
  get inputs(): SetCMOCall__Inputs {
    return new SetCMOCall__Inputs(this);
  }

  get outputs(): SetCMOCall__Outputs {
    return new SetCMOCall__Outputs(this);
  }
}

export class SetCMOCall__Inputs {
  _call: SetCMOCall;

  constructor(call: SetCMOCall) {
    this._call = call;
  }

  get _newCMO(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCMOCall__Outputs {
  _call: SetCMOCall;

  constructor(call: SetCMOCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class SetCEOCall extends ethereum.Call {
  get inputs(): SetCEOCall__Inputs {
    return new SetCEOCall__Inputs(this);
  }

  get outputs(): SetCEOCall__Outputs {
    return new SetCEOCall__Outputs(this);
  }
}

export class SetCEOCall__Inputs {
  _call: SetCEOCall;

  constructor(call: SetCEOCall) {
    this._call = call;
  }

  get _newCEO(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCEOCall__Outputs {
  _call: SetCEOCall;

  constructor(call: SetCEOCall) {
    this._call = call;
  }
}

export class CreateGen0AuctionCall extends ethereum.Call {
  get inputs(): CreateGen0AuctionCall__Inputs {
    return new CreateGen0AuctionCall__Inputs(this);
  }

  get outputs(): CreateGen0AuctionCall__Outputs {
    return new CreateGen0AuctionCall__Outputs(this);
  }
}

export class CreateGen0AuctionCall__Inputs {
  _call: CreateGen0AuctionCall;

  constructor(call: CreateGen0AuctionCall) {
    this._call = call;
  }

  get _dna(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endingPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _agility(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _strength(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _intelligence(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class CreateGen0AuctionCall__Outputs {
  _call: CreateGen0AuctionCall;

  constructor(call: CreateGen0AuctionCall) {
    this._call = call;
  }
}

export class SetCOOCall extends ethereum.Call {
  get inputs(): SetCOOCall__Inputs {
    return new SetCOOCall__Inputs(this);
  }

  get outputs(): SetCOOCall__Outputs {
    return new SetCOOCall__Outputs(this);
  }
}

export class SetCOOCall__Inputs {
  _call: SetCOOCall;

  constructor(call: SetCOOCall) {
    this._call = call;
  }

  get _newCOO(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCOOCall__Outputs {
  _call: SetCOOCall;

  constructor(call: SetCOOCall) {
    this._call = call;
  }
}

export class CreateSaleAuctionCall extends ethereum.Call {
  get inputs(): CreateSaleAuctionCall__Inputs {
    return new CreateSaleAuctionCall__Inputs(this);
  }

  get outputs(): CreateSaleAuctionCall__Outputs {
    return new CreateSaleAuctionCall__Outputs(this);
  }
}

export class CreateSaleAuctionCall__Inputs {
  _call: CreateSaleAuctionCall;

  constructor(call: CreateSaleAuctionCall) {
    this._call = call;
  }

  get _dragonId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endingPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateSaleAuctionCall__Outputs {
  _call: CreateSaleAuctionCall;

  constructor(call: CreateSaleAuctionCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class SetCIOCall extends ethereum.Call {
  get inputs(): SetCIOCall__Inputs {
    return new SetCIOCall__Inputs(this);
  }

  get outputs(): SetCIOCall__Outputs {
    return new SetCIOCall__Outputs(this);
  }
}

export class SetCIOCall__Inputs {
  _call: SetCIOCall;

  constructor(call: SetCIOCall) {
    this._call = call;
  }

  get _newCIO(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCIOCall__Outputs {
  _call: SetCIOCall;

  constructor(call: SetCIOCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class CreateSiringAuctionCall extends ethereum.Call {
  get inputs(): CreateSiringAuctionCall__Inputs {
    return new CreateSiringAuctionCall__Inputs(this);
  }

  get outputs(): CreateSiringAuctionCall__Outputs {
    return new CreateSiringAuctionCall__Outputs(this);
  }
}

export class CreateSiringAuctionCall__Inputs {
  _call: CreateSiringAuctionCall;

  constructor(call: CreateSiringAuctionCall) {
    this._call = call;
  }

  get _dragonId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endingPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateSiringAuctionCall__Outputs {
  _call: CreateSiringAuctionCall;

  constructor(call: CreateSiringAuctionCall) {
    this._call = call;
  }
}

export class SetAutoBirthFeeCall extends ethereum.Call {
  get inputs(): SetAutoBirthFeeCall__Inputs {
    return new SetAutoBirthFeeCall__Inputs(this);
  }

  get outputs(): SetAutoBirthFeeCall__Outputs {
    return new SetAutoBirthFeeCall__Outputs(this);
  }
}

export class SetAutoBirthFeeCall__Inputs {
  _call: SetAutoBirthFeeCall;

  constructor(call: SetAutoBirthFeeCall) {
    this._call = call;
  }

  get val(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAutoBirthFeeCall__Outputs {
  _call: SetAutoBirthFeeCall;

  constructor(call: SetAutoBirthFeeCall) {
    this._call = call;
  }
}

export class ApproveSiringCall extends ethereum.Call {
  get inputs(): ApproveSiringCall__Inputs {
    return new ApproveSiringCall__Inputs(this);
  }

  get outputs(): ApproveSiringCall__Outputs {
    return new ApproveSiringCall__Outputs(this);
  }
}

export class ApproveSiringCall__Inputs {
  _call: ApproveSiringCall;

  constructor(call: ApproveSiringCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _sireId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveSiringCall__Outputs {
  _call: ApproveSiringCall;

  constructor(call: ApproveSiringCall) {
    this._call = call;
  }
}

export class SetCFOCall extends ethereum.Call {
  get inputs(): SetCFOCall__Inputs {
    return new SetCFOCall__Inputs(this);
  }

  get outputs(): SetCFOCall__Outputs {
    return new SetCFOCall__Outputs(this);
  }
}

export class SetCFOCall__Inputs {
  _call: SetCFOCall;

  constructor(call: SetCFOCall) {
    this._call = call;
  }

  get _newCFO(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCFOCall__Outputs {
  _call: SetCFOCall;

  constructor(call: SetCFOCall) {
    this._call = call;
  }
}

export class WithdrawBalanceCall extends ethereum.Call {
  get inputs(): WithdrawBalanceCall__Inputs {
    return new WithdrawBalanceCall__Inputs(this);
  }

  get outputs(): WithdrawBalanceCall__Outputs {
    return new WithdrawBalanceCall__Outputs(this);
  }
}

export class WithdrawBalanceCall__Inputs {
  _call: WithdrawBalanceCall;

  constructor(call: WithdrawBalanceCall) {
    this._call = call;
  }
}

export class WithdrawBalanceCall__Outputs {
  _call: WithdrawBalanceCall;

  constructor(call: WithdrawBalanceCall) {
    this._call = call;
  }
}

export class SetSaleAuctionAddressCall extends ethereum.Call {
  get inputs(): SetSaleAuctionAddressCall__Inputs {
    return new SetSaleAuctionAddressCall__Inputs(this);
  }

  get outputs(): SetSaleAuctionAddressCall__Outputs {
    return new SetSaleAuctionAddressCall__Outputs(this);
  }
}

export class SetSaleAuctionAddressCall__Inputs {
  _call: SetSaleAuctionAddressCall;

  constructor(call: SetSaleAuctionAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSaleAuctionAddressCall__Outputs {
  _call: SetSaleAuctionAddressCall;

  constructor(call: SetSaleAuctionAddressCall) {
    this._call = call;
  }
}

export class SetNewAddressCall extends ethereum.Call {
  get inputs(): SetNewAddressCall__Inputs {
    return new SetNewAddressCall__Inputs(this);
  }

  get outputs(): SetNewAddressCall__Outputs {
    return new SetNewAddressCall__Outputs(this);
  }
}

export class SetNewAddressCall__Inputs {
  _call: SetNewAddressCall;

  constructor(call: SetNewAddressCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNewAddressCall__Outputs {
  _call: SetNewAddressCall;

  constructor(call: SetNewAddressCall) {
    this._call = call;
  }
}

export class CreatePromoDragonCall extends ethereum.Call {
  get inputs(): CreatePromoDragonCall__Inputs {
    return new CreatePromoDragonCall__Inputs(this);
  }

  get outputs(): CreatePromoDragonCall__Outputs {
    return new CreatePromoDragonCall__Outputs(this);
  }
}

export class CreatePromoDragonCall__Inputs {
  _call: CreatePromoDragonCall;

  constructor(call: CreatePromoDragonCall) {
    this._call = call;
  }

  get _dna(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _agility(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _strength(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _intelligence(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _runelevel(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class CreatePromoDragonCall__Outputs {
  _call: CreatePromoDragonCall;

  constructor(call: CreatePromoDragonCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class WithdrawAuctionBalancesCall extends ethereum.Call {
  get inputs(): WithdrawAuctionBalancesCall__Inputs {
    return new WithdrawAuctionBalancesCall__Inputs(this);
  }

  get outputs(): WithdrawAuctionBalancesCall__Outputs {
    return new WithdrawAuctionBalancesCall__Outputs(this);
  }
}

export class WithdrawAuctionBalancesCall__Inputs {
  _call: WithdrawAuctionBalancesCall;

  constructor(call: WithdrawAuctionBalancesCall) {
    this._call = call;
  }
}

export class WithdrawAuctionBalancesCall__Outputs {
  _call: WithdrawAuctionBalancesCall;

  constructor(call: WithdrawAuctionBalancesCall) {
    this._call = call;
  }
}

export class SetBreedingLimitCall extends ethereum.Call {
  get inputs(): SetBreedingLimitCall__Inputs {
    return new SetBreedingLimitCall__Inputs(this);
  }

  get outputs(): SetBreedingLimitCall__Outputs {
    return new SetBreedingLimitCall__Outputs(this);
  }
}

export class SetBreedingLimitCall__Inputs {
  _call: SetBreedingLimitCall;

  constructor(call: SetBreedingLimitCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBreedingLimitCall__Outputs {
  _call: SetBreedingLimitCall;

  constructor(call: SetBreedingLimitCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class GiveBirthCall extends ethereum.Call {
  get inputs(): GiveBirthCall__Inputs {
    return new GiveBirthCall__Inputs(this);
  }

  get outputs(): GiveBirthCall__Outputs {
    return new GiveBirthCall__Outputs(this);
  }
}

export class GiveBirthCall__Inputs {
  _call: GiveBirthCall;

  constructor(call: GiveBirthCall) {
    this._call = call;
  }

  get _matronId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _dna(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _agility(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _strength(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _intelligence(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _runelevel(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class GiveBirthCall__Outputs {
  _call: GiveBirthCall;

  constructor(call: GiveBirthCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BidOnSiringAuctionCall extends ethereum.Call {
  get inputs(): BidOnSiringAuctionCall__Inputs {
    return new BidOnSiringAuctionCall__Inputs(this);
  }

  get outputs(): BidOnSiringAuctionCall__Outputs {
    return new BidOnSiringAuctionCall__Outputs(this);
  }
}

export class BidOnSiringAuctionCall__Inputs {
  _call: BidOnSiringAuctionCall;

  constructor(call: BidOnSiringAuctionCall) {
    this._call = call;
  }

  get _sireId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _matronId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BidOnSiringAuctionCall__Outputs {
  _call: BidOnSiringAuctionCall;

  constructor(call: BidOnSiringAuctionCall) {
    this._call = call;
  }
}

export class BreedWithAutoCall extends ethereum.Call {
  get inputs(): BreedWithAutoCall__Inputs {
    return new BreedWithAutoCall__Inputs(this);
  }

  get outputs(): BreedWithAutoCall__Outputs {
    return new BreedWithAutoCall__Outputs(this);
  }
}

export class BreedWithAutoCall__Inputs {
  _call: BreedWithAutoCall;

  constructor(call: BreedWithAutoCall) {
    this._call = call;
  }

  get _matronId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _sireId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BreedWithAutoCall__Outputs {
  _call: BreedWithAutoCall;

  constructor(call: BreedWithAutoCall) {
    this._call = call;
  }
}

export class RequestAssetUpdateCall extends ethereum.Call {
  get inputs(): RequestAssetUpdateCall__Inputs {
    return new RequestAssetUpdateCall__Inputs(this);
  }

  get outputs(): RequestAssetUpdateCall__Outputs {
    return new RequestAssetUpdateCall__Outputs(this);
  }
}

export class RequestAssetUpdateCall__Inputs {
  _call: RequestAssetUpdateCall;

  constructor(call: RequestAssetUpdateCall) {
    this._call = call;
  }

  get _dragonId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _rune(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RequestAssetUpdateCall__Outputs {
  _call: RequestAssetUpdateCall;

  constructor(call: RequestAssetUpdateCall) {
    this._call = call;
  }
}

export class SetTokenURIAffixesCall extends ethereum.Call {
  get inputs(): SetTokenURIAffixesCall__Inputs {
    return new SetTokenURIAffixesCall__Inputs(this);
  }

  get outputs(): SetTokenURIAffixesCall__Outputs {
    return new SetTokenURIAffixesCall__Outputs(this);
  }
}

export class SetTokenURIAffixesCall__Inputs {
  _call: SetTokenURIAffixesCall;

  constructor(call: SetTokenURIAffixesCall) {
    this._call = call;
  }

  get _prefix(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _suffix(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenURIAffixesCall__Outputs {
  _call: SetTokenURIAffixesCall;

  constructor(call: SetTokenURIAffixesCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
